# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
            
      - name: Run containers
        run: docker-compose  -f "/docker/dev/docker-compose.yml" build
        
      
      - name: ls working directory
        run: docker-compose  -f "/docker/dev/docker-compose.yml" up -d

          
      - name: Show containers
        run: docker ps -a
        
      - name: Show volumes
        run: docker volume ls

      - name: ls working directory
        run: docker-compose  -f "/docker/dev/docker-compose.yml" exec -T web ls

      - name: ls /code directory
        run: docker-compose  -f "/docker/dev/docker-compose.yml" exec -T web ls /code
          
      - name: ls setup laravel
        run: docker-compose  -f "/docker/dev/docker-compose.yml" exec -T web /code/setup_test_laravel.sh
          
      - name: run phpunit tests
        run: docker-compose  -f "/docker/dev/docker-compose.yml" exec -T web /var/www/html/vendor/bin/phpunit
      
      - name: run codeception tests
        run: docker-compose  -f "/docker/dev/docker-compose.yml" exec -T web /var/www/html/docker/dev/test.sh

      - name: Run containers
        run: docker-compose  -f "/docker/dev/docker-compose.yml" down --volumes